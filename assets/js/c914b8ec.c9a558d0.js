"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[4423],{30876:(t,e,a)=>{a.d(e,{Zo:()=>k,kt:()=>u});var n=a(2784);function i(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){i(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,i=function(t,e){if(null==t)return{};var a,n,i={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(i[a]=t[a]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(i[a]=t[a])}return i}var o=n.createContext({}),d=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},k=function(t){var e=d(t.components);return n.createElement(o.Provider,{value:e},t.children)},s="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,i=t.mdxType,r=t.originalType,o=t.parentName,k=p(t,["components","mdxType","originalType","parentName"]),s=d(a),c=i,u=s["".concat(o,".").concat(c)]||s[c]||m[c]||r;return a?n.createElement(u,l(l({ref:e},k),{},{components:a})):n.createElement(u,l({ref:e},k))}));function u(t,e){var a=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=a.length,l=new Array(r);l[0]=c;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p[s]="string"==typeof t?t:i,l[1]=p;for(var d=2;d<r;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},10937:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var n=a(7896),i=(a(2784),a(30876));const r={id:"src",title:"Module: src",sidebar_label:"src",sidebar_position:0,custom_edit_url:null},l=void 0,p={unversionedId:"circuits-api/modules/src",id:"version-2.1.x/circuits-api/modules/src",title:"Module: src",description:"Enumerations",source:"@site/versioned_docs/version-2.1.x/circuits-api/modules/src.md",sourceDirName:"circuits-api/modules",slug:"/circuits-api/modules/src",permalink:"/docs/circuits-api/modules/src",draft:!1,editUrl:null,tags:[],version:"2.1.x",sidebarPosition:0,frontMatter:{id:"src",title:"Module: src",sidebar_label:"src",sidebar_position:0,custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"provers/web",permalink:"/docs/circuits-api/modules/provers_web"},next:{title:"Circuit",permalink:"/docs/circuits-api/enums/src.Circuit"}},o={},d=[{value:"Enumerations",id:"enumerations",level:2},{value:"Classes",id:"classes",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"EpochKeyControl",id:"epochkeycontrol",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Field",id:"field",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"ReputationControl",id:"reputationcontrol",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"SignupControl",id:"signupcontrol",level:3},{value:"Type declaration",id:"type-declaration-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"UserStateTransitionControl",id:"userstatetransitioncontrol",level:3},{value:"Type declaration",id:"type-declaration-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"Variables",id:"variables",level:2},{value:"SNARK_SCALAR_FIELD",id:"snark_scalar_field",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"Functions",id:"functions",level:2},{value:"buildEpochKeyControl",id:"buildepochkeycontrol",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"buildReputationControl",id:"buildreputationcontrol",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"buildSignupControl",id:"buildsignupcontrol",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"buildUserStateTransitionControl",id:"builduserstatetransitioncontrol",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"decodeEpochKeyControl",id:"decodeepochkeycontrol",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"decodeReputationControl",id:"decodereputationcontrol",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"decodeSignupControl",id:"decodesignupcontrol",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"decodeUserStateTransitionControl",id:"decodeuserstatetransitioncontrol",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"formatProofForSnarkjsVerification",id:"formatproofforsnarkjsverification",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"formatProofForVerifierContract",id:"formatproofforverifiercontract",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"shiftBits",id:"shiftbits",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-16",level:4}],k={toc:d},s="wrapper";function m(t){let{components:e,...a}=t;return(0,i.kt)(s,(0,n.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"enumerations"},"Enumerations"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/circuits-api/enums/src.Circuit"},"Circuit"))),(0,i.kt)("h2",{id:"classes"},"Classes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/circuits-api/classes/src.BaseProof"},"BaseProof")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/circuits-api/classes/src.CircuitConfig"},"CircuitConfig")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/circuits-api/classes/src.EpochKeyLiteProof"},"EpochKeyLiteProof")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/circuits-api/classes/src.EpochKeyProof"},"EpochKeyProof")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/circuits-api/classes/src.ReputationProof"},"ReputationProof")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/circuits-api/classes/src.ScopeNullifierProof"},"ScopeNullifierProof")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/circuits-api/classes/src.SignupProof"},"SignupProof")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/circuits-api/classes/src.UserStateTransitionProof"},"UserStateTransitionProof"))),(0,i.kt)("h2",{id:"interfaces"},"Interfaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/circuits-api/interfaces/src.Prover"},"Prover"))),(0,i.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,i.kt)("h3",{id:"epochkeycontrol"},"EpochKeyControl"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"EpochKeyControl"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"The data is used to build epoch key control."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"See"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://developer.unirep.io/docs/circuits-api/circuits#epoch-key-proof"},"https://developer.unirep.io/docs/circuits-api/circuits#epoch-key-proof")),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"attesterId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"chainId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"epoch")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nonce")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"revealNonce")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/type.ts#L9"},"circuits/src/type.ts:9")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"field"},"Field"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"Field"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/type.ts#L3"},"circuits/src/type.ts:3")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"reputationcontrol"},"ReputationControl"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"ReputationControl"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"The data is used to build reputation control."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"See"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://developer.unirep.io/docs/circuits-api/circuits#reputation-proof"},"https://developer.unirep.io/docs/circuits-api/circuits#reputation-proof")),(0,i.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"maxRep")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"minRep")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proveGraffiti")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proveMaxRep")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proveMinRep")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proveZeroRep")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))))),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/type.ts#L21"},"circuits/src/type.ts:21")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"signupcontrol"},"SignupControl"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"SignupControl"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"The data is used to build signup control."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"See"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://developer.unirep.io/docs/circuits-api/circuits#signup-proof"},"https://developer.unirep.io/docs/circuits-api/circuits#signup-proof")),(0,i.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"attesterId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"chainId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"epoch")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))))),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/type.ts#L43"},"circuits/src/type.ts:43")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"userstatetransitioncontrol"},"UserStateTransitionControl"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"UserStateTransitionControl"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"The data is used to build user state transition control."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"See"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://developer.unirep.io/docs/circuits-api/circuits#user-state-transition-proof"},"https://developer.unirep.io/docs/circuits-api/circuits#user-state-transition-proof")),(0,i.kt)("h4",{id:"type-declaration-3"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"attesterId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"toEpoch")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))))),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/type.ts#L34"},"circuits/src/type.ts:34")),(0,i.kt)("h2",{id:"variables"},"Variables"),(0,i.kt)("h3",{id:"snark_scalar_field"},"SNARK","_","SCALAR","_","FIELD"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,i.kt)("strong",{parentName:"p"},"SNARK","_","SCALAR","_","FIELD"),": ",(0,i.kt)("inlineCode",{parentName:"p"},'"21888242871839275222246405745257275088548364400416034343698204186575808495617"')),(0,i.kt)("p",null,"A decimal string representing the field prime."),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"utils/build/crypto.d.ts:4"),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"buildepochkeycontrol"},"buildEpochKeyControl"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"buildEpochKeyControl"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"params"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"config?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"Encode data to a 253 bits variable."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/modules/src#epochkeycontrol"},(0,i.kt)("inlineCode",{parentName:"a"},"EpochKeyControl"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The data is going to be encoded. { ",(0,i.kt)("inlineCode",{parentName:"td"},"nonce"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"epoch"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"attesterId"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"revealNonce"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"chainId")," }")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/classes/src.CircuitConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"CircuitConfig"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The circuit config. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default"))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"a 253 bits control."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/utils.ts#L204"},"circuits/src/utils.ts:204")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildreputationcontrol"},"buildReputationControl"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"buildReputationControl"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"params"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"config?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"Encode data to a 253 bits variable."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/modules/src#reputationcontrol"},(0,i.kt)("inlineCode",{parentName:"a"},"ReputationControl"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The data is going to be encoded. { ",(0,i.kt)("inlineCode",{parentName:"td"},"minRep"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"maxRep"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"proveMinRep"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"proveMaxRep"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"proveZeroRep"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"proveGraffiti")," }")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/classes/src.CircuitConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"CircuitConfig"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The circuit config. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"a 253 bits control."),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/utils.ts#L237"},"circuits/src/utils.ts:237")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"buildsignupcontrol"},"buildSignupControl"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"buildSignupControl"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"params"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"config?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"Encode data to a 253 bits variable."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/modules/src#signupcontrol"},(0,i.kt)("inlineCode",{parentName:"a"},"SignupControl"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The data is going to be encoded. { ",(0,i.kt)("inlineCode",{parentName:"td"},"attesterId"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"epoch"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"chainId")," }")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/classes/src.CircuitConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"CircuitConfig"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The circuit config. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default"))))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"a 253 bits control."),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/utils.ts#L301"},"circuits/src/utils.ts:301")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"builduserstatetransitioncontrol"},"buildUserStateTransitionControl"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"buildUserStateTransitionControl"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"params"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"config?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"Encode data to a 253 bits variable."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"params")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/modules/src#userstatetransitioncontrol"},(0,i.kt)("inlineCode",{parentName:"a"},"UserStateTransitionControl"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The data is going to be encoded. { ",(0,i.kt)("inlineCode",{parentName:"td"},"attesterId"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"toEpoch")," }")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/classes/src.CircuitConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"CircuitConfig"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The circuit config. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default"))))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"a 253 bits control."),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/utils.ts#L278"},"circuits/src/utils.ts:278")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"decodeepochkeycontrol"},"decodeEpochKeyControl"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"decodeEpochKeyControl"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"control"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"config?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/circuits-api/modules/src#epochkeycontrol"},(0,i.kt)("inlineCode",{parentName:"a"},"EpochKeyControl"))),(0,i.kt)("p",null,"Decode the raw control field to desired data."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"control")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The raw control field generated by ",(0,i.kt)("inlineCode",{parentName:"td"},"genProofAndPublicSignals"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/classes/src.CircuitConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"CircuitConfig"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The circuit config. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default"))))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/circuits-api/modules/src#epochkeycontrol"},(0,i.kt)("inlineCode",{parentName:"a"},"EpochKeyControl"))),(0,i.kt)("p",null,"{ ",(0,i.kt)("inlineCode",{parentName:"p"},"nonce"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"epoch"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"attesterId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"revealNonce"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"chainId")," }"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/utils.ts#L78"},"circuits/src/utils.ts:78")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"decodereputationcontrol"},"decodeReputationControl"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"decodeReputationControl"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"control"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"config?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"Decode the raw control field to desired data."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"control")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The raw control field generated by ",(0,i.kt)("inlineCode",{parentName:"td"},"genProofAndPublicSignals"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/classes/src.CircuitConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"CircuitConfig"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The circuit config. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default"))))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"{ ",(0,i.kt)("inlineCode",{parentName:"p"},"minRep"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"maxRep"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"proveMinRep"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"proveMaxRep"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"proveZeroRep"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"proveGraffiti")," }"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"maxRep")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"minRep")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proveGraffiti")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proveMaxRep")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proveMinRep")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proveZeroRep")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint"))))),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/utils.ts#L115"},"circuits/src/utils.ts:115")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"decodesignupcontrol"},"decodeSignupControl"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"decodeSignupControl"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"control"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"config?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/circuits-api/modules/src#signupcontrol"},(0,i.kt)("inlineCode",{parentName:"a"},"SignupControl"))),(0,i.kt)("p",null,"Decode the raw control field to desired data."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"control")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The raw control field generated by ",(0,i.kt)("inlineCode",{parentName:"td"},"genProofAndPublicSignals"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/classes/src.CircuitConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"CircuitConfig"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The circuit config. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default"))))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/circuits-api/modules/src#signupcontrol"},(0,i.kt)("inlineCode",{parentName:"a"},"SignupControl"))),(0,i.kt)("p",null,"{ ",(0,i.kt)("inlineCode",{parentName:"p"},"attesterId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"epoch"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"chainId")," }"),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/utils.ts#L178"},"circuits/src/utils.ts:178")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"decodeuserstatetransitioncontrol"},"decodeUserStateTransitionControl"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"decodeUserStateTransitionControl"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"control"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"config?"),"): ",(0,i.kt)("a",{parentName:"p",href:"/docs/circuits-api/modules/src#userstatetransitioncontrol"},(0,i.kt)("inlineCode",{parentName:"a"},"UserStateTransitionControl"))),(0,i.kt)("p",null,"Decode the raw control field to desired data."),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"control")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The raw control field generated by ",(0,i.kt)("inlineCode",{parentName:"td"},"genProofAndPublicSignals"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/classes/src.CircuitConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"CircuitConfig"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The circuit config. Default: ",(0,i.kt)("inlineCode",{parentName:"td"},"CircuitConfig.default"))))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/circuits-api/modules/src#userstatetransitioncontrol"},(0,i.kt)("inlineCode",{parentName:"a"},"UserStateTransitionControl"))),(0,i.kt)("p",null,"{ ",(0,i.kt)("inlineCode",{parentName:"p"},"attesterId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"toEpoch")," }"),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/utils.ts#L156"},"circuits/src/utils.ts:156")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"formatproofforsnarkjsverification"},"formatProofForSnarkjsVerification"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"formatProofForSnarkjsVerification"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"proof"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Groth16Proof")),(0,i.kt)("p",null,"Format an one dimensional array for ",(0,i.kt)("inlineCode",{parentName:"p"},"snarkjs")," verification"),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proof")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/docs/circuits-api/modules/src#field"},(0,i.kt)("inlineCode",{parentName:"a"},"Field")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The string array of the proof")))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Groth16Proof")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"SnarkProof")," type proof data"),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/utils.ts#L36"},"circuits/src/utils.ts:36")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"formatproofforverifiercontract"},"formatProofForVerifierContract"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"formatProofForVerifierContract"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"proof"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,i.kt)("p",null,"Format snark proof for verifier smart contract"),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"proof")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Groth16Proof")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The proof of ",(0,i.kt)("inlineCode",{parentName:"td"},"SnarkProof")," type")))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,i.kt)("p",null,"An one dimensional array of stringified proof data"),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/utils.ts#L16"},"circuits/src/utils.ts:16")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"shiftbits"},"shiftBits"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"shiftBits"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"shiftBits"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"variableBits"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("p",null,"Shift ",(0,i.kt)("inlineCode",{parentName:"p"},"shiftBits")," bits and compute the ",(0,i.kt)("strong",{parentName:"p"},"AND")," operation in ",(0,i.kt)("inlineCode",{parentName:"p"},"variableBits")," bits ",(0,i.kt)("inlineCode",{parentName:"p"},"data"),".\nFor example, Get ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," from LSB ",(0,i.kt)("inlineCode",{parentName:"p"},"20")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"30")," bits.\nThen use ",(0,i.kt)("inlineCode",{parentName:"p"},"shiftBits(data, 20, 10)")," to get the ",(0,i.kt)("inlineCode",{parentName:"p"},"10")," bits data."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"data")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The raw data in ",(0,i.kt)("inlineCode",{parentName:"td"},"bigint")," type.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"shiftBits")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The shifted bits.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"variableBits")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bigint")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The output data bits.")))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"bigint")),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/src/utils.ts#L64"},"circuits/src/utils.ts:64")))}m.isMDXComponent=!0}}]);