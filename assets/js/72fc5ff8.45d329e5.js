"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[8897],{30876:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var o=t(2784);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),s=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=s(e.components);return o.createElement(c.Provider,{value:n},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=s(t),f=r,m=d["".concat(c,".").concat(f)]||d[f]||h[f]||i;return t?o.createElement(m,a(a({ref:n},l),{},{components:t})):o.createElement(m,a({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=f;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p[d]="string"==typeof e?e:r,a[1]=p;for(var s=2;s<i;s++)a[s]=t[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},3964:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var o=t(7896),r=(t(2784),t(30876));const i={description:"User generates an epoch key and a proof of this epoch key"},a="Epoch Key And Proof",p={unversionedId:"cli/epoch-key-and-proof",id:"version-1.0.1/cli/epoch-key-and-proof",title:"Epoch Key And Proof",description:"User generates an epoch key and a proof of this epoch key",source:"@site/versioned_docs/version-1.0.1/cli/epoch-key-and-proof.md",sourceDirName:"cli",slug:"/cli/epoch-key-and-proof",permalink:"/docs/1.0.1/cli/epoch-key-and-proof",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-1.0.1/cli/epoch-key-and-proof.md",tags:[],version:"1.0.1",frontMatter:{description:"User generates an epoch key and a proof of this epoch key"},sidebar:"apiSidebar",previous:{title:"User Sign Up",permalink:"/docs/1.0.1/cli/user-sign-up"},next:{title:"Attestation",permalink:"/docs/1.0.1/cli/attestation"}},c={},s=[{value:"<code>genEpochKeyAndProof</code>",id:"genepochkeyandproof",level:2},{value:"Options",id:"options",level:3},{value:'Options inherited from parent commands <a href="#options-inherited-from-parent-commands" id="options-inherited-from-parent-commands"></a>',id:"options-inherited-from-parent-commands-",level:4},{value:"<code>verifyEpochKeyProof</code>",id:"verifyepochkeyproof",level:2},{value:"Options",id:"options-1",level:3},{value:'Options inherited from parent commands <a href="#options-inherited-from-parent-commands" id="options-inherited-from-parent-commands"></a>',id:"options-inherited-from-parent-commands--1",level:4}],l={toc:s},d="wrapper";function h(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"epoch-key-and-proof"},"Epoch Key And Proof"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"An epoch key is the only way that a user can receive reputation."),(0,r.kt)("li",{parentName:"ul"},"A user can generate an epoch key with a nonce, the nonce should be less than ",(0,r.kt)("inlineCode",{parentName:"li"},"numEpochKeyNoncePerEpoch"),"."),(0,r.kt)("li",{parentName:"ul"},"A user generates the epoch key with a circom circuit and the epoch key and proof can be verified by attesters and other users.")),(0,r.kt)("h2",{id:"genepochkeyandproof"},(0,r.kt)("inlineCode",{parentName:"h2"},"genEpochKeyAndProof")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx ts-node cli/index.ts genEpochKeyAndProof \n                  [-h] \n                  [-e ETH_PROVIDER] \n                  -id IDENTITY \n                  -n EPOCH_KEY_NONCE \n                  -x CONTRACT\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"epoch key and base64url encoded epoch key proof and public signals will be printed"),(0,r.kt)("li",{parentName:"ul"},"A string with ",(0,r.kt)("inlineCode",{parentName:"li"},"Unirep.epk.proof")," prefix is the proof of this epoch key"),(0,r.kt)("li",{parentName:"ul"},"A string with ",(0,r.kt)("inlineCode",{parentName:"li"},"Unirep.epk.publicSignals")," prefix is the public signals of this proof The public signals includes",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"the current epoch"),(0,r.kt)("li",{parentName:"ul"},"the epoch key"),(0,r.kt)("li",{parentName:"ul"},"the global state tree root."))),(0,r.kt)("li",{parentName:"ul"},"Attesters and other users can verify if the epoch key is in the current epoch and if the user has a leaf in the global state tree.")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  -e ETH_PROVIDER, --eth-provider ETH_PROVIDER\n                        A connection string to an Ethereum provider. Default: http://localhost:8545\n  -id IDENTITY, --identity IDENTITY\n                        The (serialized) user's identity\n  -n EPOCH_KEY_NONCE, --epoch-key-nonce EPOCH_KEY_NONCE\n                        The epoch key nonce\n  -x CONTRACT, --contract CONTRACT\n                        The Unirep contract address\n")),(0,r.kt)("h4",{id:"options-inherited-from-parent-commands-"},"Options inherited from parent commands ",(0,r.kt)("a",{href:"#options-inherited-from-parent-commands",id:"options-inherited-from-parent-commands"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  -h, --help            Show this help message and exit.\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"source: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/5ef3fa8ed70761e0d128fe054bcdb6c72be2f7a1/packages/core/cli/genEpochKeyAndProof.ts"},"core/cli/genEpochKeyAndProof.ts"))),(0,r.kt)("h2",{id:"verifyepochkeyproof"},(0,r.kt)("inlineCode",{parentName:"h2"},"verifyEpochKeyProof")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx ts-node cli/index.ts verifyEpochKeyProof \n                  [-h] \n                  [-e ETH_PROVIDER] \n                  -p PUBLIC_SIGNALS \n                  -pf PROOF \n                  -x CONTRACT\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This command will help other users with an epoch key proof with ",(0,r.kt)("inlineCode",{parentName:"li"},"Unirep.epk.proof")," prefix and it public signals with ",(0,r.kt)("inlineCode",{parentName:"li"},"Unirep.epk.publicSignals")," prefix to call the Unirep smart contract to verify the proof.")),(0,r.kt)("h3",{id:"options-1"},"Options"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  -e ETH_PROVIDER, --eth-provider ETH_PROVIDER\n                        A connection string to an Ethereum provider. Default: http://localhost:8545\n  -p PUBLIC_SIGNALS, --public-signals PUBLIC_SIGNALS\n                        The snark public signals of the user's epoch key\n  -pf PROOF, --proof PROOF\n                        The snark proof of the user's epoch key\n  -x CONTRACT, --contract CONTRACT\n                        The Unirep contract address\n")),(0,r.kt)("h4",{id:"options-inherited-from-parent-commands--1"},"Options inherited from parent commands ",(0,r.kt)("a",{href:"#options-inherited-from-parent-commands",id:"options-inherited-from-parent-commands"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  -h, --help            Show this help message and exit.\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"source: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/5ef3fa8ed70761e0d128fe054bcdb6c72be2f7a1/packages/core/cli/verifyEpochKeyProof.ts"},"core/cli/verifyEpochKeyProof.ts"))))}h.isMDXComponent=!0}}]);