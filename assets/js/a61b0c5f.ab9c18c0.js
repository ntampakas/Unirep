"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[5357],{30876:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[d]="string"==typeof e?e:o,a[1]=p;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},50742:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var r=n(7896),o=(n(2784),n(30876));const i={description:"User can generate reputation proof to claim how much reputation he has"},a="Reputation Proof",p={unversionedId:"cli/reputation-proof",id:"version-1.0.1/cli/reputation-proof",title:"Reputation Proof",description:"User can generate reputation proof to claim how much reputation he has",source:"@site/versioned_docs/version-1.0.1/cli/reputation-proof.md",sourceDirName:"cli",slug:"/cli/reputation-proof",permalink:"/docs/1.0.1/cli/reputation-proof",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-1.0.1/cli/reputation-proof.md",tags:[],version:"1.0.1",frontMatter:{description:"User can generate reputation proof to claim how much reputation he has"},sidebar:"apiSidebar",previous:{title:"User state transition",permalink:"/docs/1.0.1/cli/user-state-transition"},next:{title:"Airdrop Reputation",permalink:"/docs/1.0.1/cli/airdrop-reputation"}},c={},s=[{value:"<code>genReputationProof</code>",id:"genreputationproof",level:2},{value:"Options",id:"options",level:3},{value:'Options inherited from parent commands <a href="#options-inherited-from-parent-commands" id="options-inherited-from-parent-commands"></a>',id:"options-inherited-from-parent-commands-",level:4},{value:"<code>verifyReputationProof</code>",id:"verifyreputationproof",level:2},{value:"Options",id:"options-1",level:3},{value:'Options inherited from parent commands <a href="#options-inherited-from-parent-commands" id="options-inherited-from-parent-commands"></a>',id:"options-inherited-from-parent-commands--1",level:4}],l={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"reputation-proof"},"Reputation Proof"),(0,o.kt)("h2",{id:"genreputationproof"},(0,o.kt)("inlineCode",{parentName:"h2"},"genReputationProof")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npx ts-node cli/index.ts genReputationProof\n                  [-h] \n                  [-e ETH_PROVIDER] \n                  -id IDENTITY \n                  -n EPOCH_KEY_NONCE \n                  -a ATTESTER_ID \n                  [-r REPUTATION_NULLIFIER] \n                  [-mr MIN_REP]\n                  [-gp GRAFFITI_PREIMAGE] \n                  -x CONTRACT\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -e ETH_PROVIDER, --eth-provider ETH_PROVIDER\n                        A connection string to an Ethereum provider. Default: http://localhost:8545\n  -id IDENTITY, --identity IDENTITY\n                        The (serialized) user's identity\n  -n EPOCH_KEY_NONCE, --epoch-key-nonce EPOCH_KEY_NONCE\n                        The epoch key nonce\n  -a ATTESTER_ID, --attester-id ATTESTER_ID\n                        The attester id (in hex representation)\n  -r REPUTATION_NULLIFIER, --reputation-nullifier REPUTATION_NULLIFIER\n                        The number of reputation nullifiers to prove\n  -mr MIN_REP, --min-rep MIN_REP\n                        The minimum positive score minus negative score the attester given to the user\n  -gp GRAFFITI_PREIMAGE, --graffiti-preimage GRAFFITI_PREIMAGE\n                        The pre-image of the graffiti for the reputation the attester given to the user (in hex representation)\n  -x CONTRACT, --contract CONTRACT\n                        The Unirep contract addressin\n")),(0,o.kt)("h4",{id:"options-inherited-from-parent-commands-"},"Options inherited from parent commands ",(0,o.kt)("a",{href:"#options-inherited-from-parent-commands",id:"options-inherited-from-parent-commands"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -h, --help            Show this help message and exit.\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"source: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/5ef3fa8ed70761e0d128fe054bcdb6c72be2f7a1/packages/core/cli/genReputationProof.ts"},"core/cli/genReputationProof.ts"))),(0,o.kt)("h2",{id:"verifyreputationproof"},(0,o.kt)("inlineCode",{parentName:"h2"},"verifyReputationProof")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npx ts-node cli/index.ts verifyReputationProof\n                  [-h] \n                  [-e ETH_PROVIDER] \n                  [-ep EPOCH] \n                  -p PUBLIC_SIGNALS \n                  -pf PROOF \n                  -x CONTRACT\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This command will help other users with reputation proof with ",(0,o.kt)("inlineCode",{parentName:"li"},"Unirep.reputation.proof")," prefix and it public signals with ",(0,o.kt)("inlineCode",{parentName:"li"},"Unirep.reputation.publicSignals")," prefix to call the Unirep smart contract to verify the proof.")),(0,o.kt)("h3",{id:"options-1"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -e ETH_PROVIDER, --eth-provider ETH_PROVIDER\n                        A connection string to an Ethereum provider. Default: http://localhost:8545\n  -ep EPOCH, --epoch EPOCH\n                        The latest epoch user transitioned to. Default: current epoch\n  -p PUBLIC_SIGNALS, --public-signals PUBLIC_SIGNALS\n                        The snark public signals of the user's epoch key\n  -pf PROOF, --proof PROOF\n                        The snark proof of the user's epoch key\n  -x CONTRACT, --contract CONTRACT\n                        The Unirep contract address\n")),(0,o.kt)("h4",{id:"options-inherited-from-parent-commands--1"},"Options inherited from parent commands ",(0,o.kt)("a",{href:"#options-inherited-from-parent-commands",id:"options-inherited-from-parent-commands"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -h, --help            Show this help message and exit.\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"source: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/5ef3fa8ed70761e0d128fe054bcdb6c72be2f7a1/packages/core/cli/verifyReputationProof.ts"},"core/cli/verifyReputationProof.ts"))))}u.isMDXComponent=!0}}]);