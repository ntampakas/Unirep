"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[8732],{30876:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(2784);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=i,h=m["".concat(p,".").concat(u)]||m[u]||l[u]||a;return n?r.createElement(h,o(o({ref:t},d),{},{components:n})):r.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},10511:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7896),i=(n(2784),n(30876));const a={description:"User and attester sign up"},o="User Sign Up",s={unversionedId:"cli/user-sign-up",id:"version-1.0.1/cli/user-sign-up",title:"User Sign Up",description:"User and attester sign up",source:"@site/versioned_docs/version-1.0.1/cli/user-sign-up.md",sourceDirName:"cli",slug:"/cli/user-sign-up",permalink:"/docs/1.0.1/cli/user-sign-up",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-1.0.1/cli/user-sign-up.md",tags:[],version:"1.0.1",frontMatter:{description:"User and attester sign up"},sidebar:"apiSidebar",previous:{title:"User Identity",permalink:"/docs/1.0.1/cli/user-identity"},next:{title:"Epoch Key And Proof",permalink:"/docs/1.0.1/cli/epoch-key-and-proof"}},p={},c=[{value:"<code>userSignup</code>",id:"usersignup",level:2},{value:"Options",id:"options",level:3},{value:'Options inherited from parent commands <a href="#options-inherited-from-parent-commands" id="options-inherited-from-parent-commands"></a>',id:"options-inherited-from-parent-commands-",level:4},{value:"<code>attesterSignUp</code>",id:"attestersignup",level:2},{value:"Options",id:"options-1",level:3},{value:'Options inherited from parent commands <a href="#options-inherited-from-parent-commands" id="options-inherited-from-parent-commands"></a>',id:"options-inherited-from-parent-commands--1",level:4}],d={toc:c},m="wrapper";function l(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"user-sign-up"},"User Sign Up"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"There are two different actors in Unirep: ",(0,i.kt)("em",{parentName:"li"},(0,i.kt)("strong",{parentName:"em"},"user"))," and ",(0,i.kt)("em",{parentName:"li"},(0,i.kt)("strong",{parentName:"em"},"attester"))),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("em",{parentName:"li"},(0,i.kt)("strong",{parentName:"em"},"user"))," with a Semaphore identity can generate an epoch key without revealing the Semaphore identity and identity commitment"),(0,i.kt)("li",{parentName:"ul"},"An ",(0,i.kt)("em",{parentName:"li"},(0,i.kt)("strong",{parentName:"em"},"attester"))," is associated with his Ethereum account or a smart contract. When an attester sign up, the attester has a unique attester id, and whenever the attester submit attestations, other users will know the attestation comes from which attester id.")),(0,i.kt)("h2",{id:"usersignup"},(0,i.kt)("inlineCode",{parentName:"h2"},"userSignup")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npx ts-node cli/index.ts userSignUp \n                  [-h] \n                  [-e ETH_PROVIDER] \n                  -c IDENTITY_COMMITMENT \n                  -x CONTRACT \n                  -d ETH_PRIVKEY\n                  [-a AIRDROP]\n")),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -e ETH_PROVIDER, --eth-provider ETH_PROVIDER\n                        A connection string to an Ethereum provider. Default: http://localhost:8545\n  -c IDENTITY_COMMITMENT, --identity-commitment IDENTITY_COMMITMENT\n                        The user's identity commitment (in hex representation)\n  -x CONTRACT, --contract CONTRACT\n                        The Unirep contract address\n  -d ETH_PRIVKEY, --eth-privkey ETH_PRIVKEY\n                        The user's Ethereum private key\n  -a AIRDROP, --airdrop AIRDROP\n                        The requested airdrop amount\n")),(0,i.kt)("h4",{id:"options-inherited-from-parent-commands-"},"Options inherited from parent commands ",(0,i.kt)("a",{href:"#options-inherited-from-parent-commands",id:"options-inherited-from-parent-commands"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -h, --help            Show this help message and exit.\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"source: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/5ef3fa8ed70761e0d128fe054bcdb6c72be2f7a1/packages/core/cli/userSignUp.ts"},"core/cli/userSignUp.ts"))),(0,i.kt)("h2",{id:"attestersignup"},(0,i.kt)("inlineCode",{parentName:"h2"},"attesterSignUp")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"npx ts-node cli/index.ts attesterSignUp \n                  [-h] \n                  [-e ETH_PROVIDER] \n                  -x CONTRACT \n                  -d ETH_PRIVKEY\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"When an attester signs up, the Unirep smart contract will record the address of the attester and assign an attester id to the attester."),(0,i.kt)("li",{parentName:"ul"},"The attester id will start indexing from 1.")),(0,i.kt)("h3",{id:"options-1"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -e ETH_PROVIDER, --eth-provider ETH_PROVIDER\n                        A connection string to an Ethereum provider. Default: http://localhost:8545\n  -x CONTRACT, --contract CONTRACT\n                        The Unirep contract address\n  -d ETH_PRIVKEY, --eth-privkey ETH_PRIVKEY\n                        The attester's Ethereum private keyhin\n")),(0,i.kt)("h4",{id:"options-inherited-from-parent-commands--1"},"Options inherited from parent commands ",(0,i.kt)("a",{href:"#options-inherited-from-parent-commands",id:"options-inherited-from-parent-commands"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -h, --help            Show this help message and exit.\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"source: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/5ef3fa8ed70761e0d128fe054bcdb6c72be2f7a1/packages/core/cli/attesterSignUp.ts"},"core/cli/attesterSignUp.ts"))))}l.isMDXComponent=!0}}]);