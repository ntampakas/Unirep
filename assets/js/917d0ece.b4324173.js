"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[3928],{30876:(e,t,i)=>{i.d(t,{Zo:()=>c,kt:()=>m});var r=i(2784);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function p(e,t){if(null==e)return{};var i,r,n=function(e,t){if(null==e)return{};var i,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)i=a[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var l=r.createContext({}),u=function(e){var t=r.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var i=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=u(i),k=n,m=s["".concat(l,".").concat(k)]||s[k]||f[k]||a;return i?r.createElement(m,o(o({ref:t},c),{},{components:i})):r.createElement(m,o({ref:t},c))}));function m(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=i.length,o=new Array(a);o[0]=k;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[s]="string"==typeof e?e:n,o[1]=p;for(var u=2;u<a;u++)o[u]=i[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,i)}k.displayName="MDXCreateElement"},68148:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>a,metadata:()=>p,toc:()=>u});var r=i(7896),n=(i(2784),i(30876));const a={description:"The zero-knowledge circuit of reputation proof in UniRep"},o="Reputation Proof",p={unversionedId:"protocol/circuits/reputation-proof",id:"version-1.0.1/protocol/circuits/reputation-proof",title:"Reputation Proof",description:"The zero-knowledge circuit of reputation proof in UniRep",source:"@site/versioned_docs/version-1.0.1/protocol/circuits/reputation-proof.md",sourceDirName:"protocol/circuits",slug:"/protocol/circuits/reputation-proof",permalink:"/docs/1.0.1/protocol/circuits/reputation-proof",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-1.0.1/protocol/circuits/reputation-proof.md",tags:[],version:"1.0.1",frontMatter:{description:"The zero-knowledge circuit of reputation proof in UniRep"},sidebar:"apiSidebar",previous:{title:"Epoch Key Proof",permalink:"/docs/1.0.1/protocol/circuits/epoch-key-proof"},next:{title:"User Sign Up Proof",permalink:"/docs/1.0.1/protocol/circuits/user-sign-up-proof"}},l={},u=[{value:"Public inputs",id:"public-inputs",level:2},{value:"Public outputs",id:"public-outputs",level:2},{value:"Private inputs",id:"private-inputs",level:2},{value:"Contraints",id:"contraints",level:2},{value:"1. Check if user exists in the Global State Tree and verify epoch key",id:"1-check-if-user-exists-in-the-global-state-tree-and-verify-epoch-key",level:3},{value:"2. Check if the reputation given by the attester is in the user state tree",id:"2-check-if-the-reputation-given-by-the-attester-is-in-the-user-state-tree",level:3},{value:"3. Check if reputation nullifiers are valid",id:"3-check-if-reputation-nullifiers-are-valid",level:3},{value:"4. Check if user has reputation greater than <code>min_rep</code>",id:"4-check-if-user-has-reputation-greater-than-min_rep",level:3},{value:"5. Check pre-image of graffiti",id:"5-check-pre-image-of-graffiti",level:3}],c={toc:u},s="wrapper";function f(e){let{components:t,...i}=e;return(0,n.kt)(s,(0,r.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"reputation-proof"},"Reputation Proof"),(0,n.kt)("p",null,"Users can use a reputation proof to claim that how the reputation is from a given attester. There are following things that user can choose to prove:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"pos_rep - neg_rep")," given by the attester is more than the claimed ",(0,n.kt)("inlineCode",{parentName:"p"},"min_rep")," i.e."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"(pos_rep - neg_rep) >= min_rep\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"graffiti_preimage")," of a ",(0,n.kt)("inlineCode",{parentName:"p"},"graffiti")," i.e."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"hash(graffiti_preimage) == graffiti\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The ",(0,n.kt)("a",{parentName:"p",href:"../glossary/nullifiers#reputation-nullifiers"},"reputation nullifiers")," are computed correctly i.e."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"// for all nonces\nnonce >= 0\nnonce < pos_rep - neg_rep\nreputation_nullifiers = hash4(\n    identity_nullifier, \n    epoch, \n    nonce, \n    attesterId\n)\n")))),(0,n.kt)("p",null,"The circuit also checks if the user has ",(0,n.kt)("a",{parentName:"p",href:"../glossary/users-and-attesters#user"},"registered")," and performed ",(0,n.kt)("a",{parentName:"p",href:"/docs/1.0.1/protocol/glossary/user-state-transition"},"user state transition")," in the claimed epoch."),(0,n.kt)("h2",{id:"public-inputs"},"Public inputs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"epoch")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"attester_id")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"rep_nullifiers_amount")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"min_rep")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"prove_graffiti")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"graffiti_pre_image"))),(0,n.kt)("h2",{id:"public-outputs"},"Public outputs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"epoch_key")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GST_root")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"rep_nullifiers"))),(0,n.kt)("h2",{id:"private-inputs"},"Private inputs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"epoch_key_nonce")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"identity_nullifier")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"identity_trapdoor")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"user_tree_root")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GST_path_index")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GST_path_elements")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"pos_rep")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"neg_rep")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"graffiti")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"sign_up")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"UST_path_elements")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"start_rep_nonce"))),(0,n.kt)("h2",{id:"contraints"},"Contraints"),(0,n.kt)("h3",{id:"1-check-if-user-exists-in-the-global-state-tree-and-verify-epoch-key"},"1. Check if user exists in the Global State Tree and verify epoch key"),(0,n.kt)("p",null,"Check the constrains in epoch key proof."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"See: ",(0,n.kt)("a",{parentName:"p",href:"/docs/1.0.1/protocol/circuits/epoch-key-proof"},"Epoch Key Proof circuit"))),(0,n.kt)("h3",{id:"2-check-if-the-reputation-given-by-the-attester-is-in-the-user-state-tree"},"2. Check if the reputation given by the attester is in the user state tree"),(0,n.kt)("p",null,"Check if ",(0,n.kt)("inlineCode",{parentName:"p"},"hash(pos_rep, neg_rep, graffiti, sign_up)")," is one of the leaves in the user state tree of root ",(0,n.kt)("inlineCode",{parentName:"p"},"user_tree_root"),"."),(0,n.kt)("h3",{id:"3-check-if-reputation-nullifiers-are-valid"},"3. Check if reputation nullifiers are valid"),(0,n.kt)("p",null,"Check if ",(0,n.kt)("inlineCode",{parentName:"p"},"start_rep_nonce + rep_nullifiers_amount < pos_rep - neg_rep"),"."),(0,n.kt)("p",null,"Check if"," "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"rep_nullifier[i] = hash4(\n    identity_nullifier, \n    epoch, \n    start_rep_nonce + i, \n    attester_id\n)\n")),(0,n.kt)("p",null,"for all ",(0,n.kt)("inlineCode",{parentName:"p"},"0 <= i < rep_nullifiers_amount")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"See: ",(0,n.kt)("a",{parentName:"p",href:"/docs/1.0.1/protocol/glossary/nullifiers#reputation-nullifiers"},"Reputation nullifiers"))),(0,n.kt)("h3",{id:"4-check-if-user-has-reputation-greater-than-min_rep"},"4. Check if user has reputation greater than ",(0,n.kt)("inlineCode",{parentName:"h3"},"min_rep")),(0,n.kt)("p",null,"Check if"," "),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"min_rep > 0")," "),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"pos_rep - neg_rep >= 0")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"pos_rep - neg_rep >= min_rep"))),(0,n.kt)("h3",{id:"5-check-pre-image-of-graffiti"},"5. Check pre-image of graffiti"),(0,n.kt)("p",null,"Check if ",(0,n.kt)("inlineCode",{parentName:"p"},"hash(graffiti_pre_image) == graffiti"),"."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"See the whole circuit in ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/v1.0.1/packages/circuits/circuits/proveReputation.circom"},"circuits/proveReputation.circom"))))}f.isMDXComponent=!0}}]);