"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[4330],{30876:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>c});var n=r(2784);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),s=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=s(r),u=a,c=m["".concat(o,".").concat(u)]||m[u]||k[u]||i;return r?n.createElement(c,l(l({ref:t},d),{},{components:r})):n.createElement(c,l({ref:t},d))}));function c(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[m]="string"==typeof e?e:a,l[1]=p;for(var s=2;s<i;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},50144:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var n=r(7896),a=(r(2784),r(30876));const i={id:"provers_web.WebProver",title:"Class: WebProver",sidebar_label:"WebProver",custom_edit_url:null},l=void 0,p={unversionedId:"circuits-api/classes/provers_web.WebProver",id:"version-2.1.x/circuits-api/classes/provers_web.WebProver",title:"Class: WebProver",description:"provers/web.WebProver",source:"@site/versioned_docs/version-2.1.x/circuits-api/classes/provers_web.WebProver.md",sourceDirName:"circuits-api/classes",slug:"/circuits-api/classes/provers_web.WebProver",permalink:"/docs/circuits-api/classes/provers_web.WebProver",draft:!1,editUrl:null,tags:[],version:"2.1.x",frontMatter:{id:"provers_web.WebProver",title:"Class: WebProver",sidebar_label:"WebProver",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"Circuit",permalink:"/docs/circuits-api/enums/src.Circuit"},next:{title:"BaseProof",permalink:"/docs/circuits-api/classes/src.BaseProof"}},o={},s=[{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"cache",id:"cache",level:3},{value:"Index signature",id:"index-signature",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"url",id:"url",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"Methods",id:"methods",level:2},{value:"genProofAndPublicSignals",id:"genproofandpublicsignals",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"getKey",id:"getkey",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"getVKey",id:"getvkey",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"verifyProof",id:"verifyproof",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"warmKeys",id:"warmkeys",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-7",level:4}],d={toc:s},m="wrapper";function k(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/circuits-api/modules/provers_web"},"provers/web"),".WebProver"),(0,a.kt)("p",null,"The circuits package includes a browser compatible prover. This prover loads the proving keys from a remote URL.\nBy default this url is ",(0,a.kt)("a",{parentName:"p",href:"https://keys.unirep.io/$%7Bversion%7D/"},"https://keys.unirep.io/${version}/"),"."),(0,a.kt)("p",null,"The server is expected to serve the ",(0,a.kt)("inlineCode",{parentName:"p"},"zkey"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"wasm"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"vkey")," files at their respective names in the provided subpath.\ne.g. for the above url the signup zkey is at ",(0,a.kt)("a",{parentName:"p",href:"https://keys.unirep.io/$%7Bversion%7D/signup.zkey%60"},"https://keys.unirep.io/${version}/signup.zkey`"),".\n@param serverUrl The server url to the ",(0,a.kt)("inlineCode",{parentName:"p"},"zkey"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"wasm"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"vkey")," files.\nDefault: ",(0,a.kt)("inlineCode",{parentName:"p"},"https://keys.unirep.io/${version}/")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Note"))),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The keys included are not safe for production use. A phase 2 trusted setup needs to be done before use.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Default key server")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Circuit } from '@unirep/circuits'\nimport prover from '@unirep/circuits/provers/web'\n\nawait prover.genProofAndPublicSignals(Circuit.signup, {\n // circuit inputs\n})\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Custom key server")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { Circuit } from '@unirep/circuits'\nimport { WebProver } from '@unirep/circuits/provers/web'\n\n// For a local key server\nconst prover = new WebProver('http://localhost:8000/keys/')\nawait prover.genProofAndPublicSignals(Circuit.signup, {\n // circuit inputs\n})\n")),(0,a.kt)("h2",{id:"constructors"},"Constructors"),(0,a.kt)("h3",{id:"constructor"},"constructor"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"new WebProver"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"serverUrl?"),")"),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Default value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"serverUrl")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"KEY_URL"))))),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/provers/web.ts#L49"},"circuits/provers/web.ts:49")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"cache"},"cache"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"cache"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Object")," = ",(0,a.kt)("inlineCode",{parentName:"p"},"{}")),(0,a.kt)("h4",{id:"index-signature"},"Index signature"),(0,a.kt)("p",null,"\u25aa ","[key: ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),"]",": ",(0,a.kt)("inlineCode",{parentName:"p"},"any")),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/provers/web.ts#L46"},"circuits/provers/web.ts:46")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"url"},"url"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"url"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/provers/web.ts#L47"},"circuits/provers/web.ts:47")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"genproofandpublicsignals"},"genProofAndPublicSignals"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"genProofAndPublicSignals"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"circuitName"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"inputs"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<{ ",(0,a.kt)("inlineCode",{parentName:"p"},"proof"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Groth16Proof")," ; ",(0,a.kt)("inlineCode",{parentName:"p"},"publicSignals"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"PublicSignals"),"  }",">"),(0,a.kt)("p",null,"Generate proof and public signals with ",(0,a.kt)("inlineCode",{parentName:"p"},"snarkjs.groth16.fullProve")),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"circuitName")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"inputs")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"any")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Name of the circuit, which can be chosen from ",(0,a.kt)("inlineCode",{parentName:"td"},"Circuit"))))),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<{ ",(0,a.kt)("inlineCode",{parentName:"p"},"proof"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Groth16Proof")," ; ",(0,a.kt)("inlineCode",{parentName:"p"},"publicSignals"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"PublicSignals"),"  }",">"),(0,a.kt)("p",null,"Snark proof and public signals"),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/provers/web.ts#L112"},"circuits/provers/web.ts:112")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getkey"},"getKey"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"getKey"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"circuitUrl"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,a.kt)("p",null,"Get key object from the server."),(0,a.kt)("h4",{id:"parameters-2"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"circuitUrl")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The url to the a ",(0,a.kt)("inlineCode",{parentName:"td"},"vkey"),", a ",(0,a.kt)("inlineCode",{parentName:"td"},"zkey"),"s or a ",(0,a.kt)("inlineCode",{parentName:"td"},"wasm"),".")))),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"vkey"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"zkey"),"s or the ",(0,a.kt)("inlineCode",{parentName:"p"},"wasm")," object."),(0,a.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/provers/web.ts#L58"},"circuits/provers/web.ts:58")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"getvkey"},"getVKey"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"getVKey"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"circuitName"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,a.kt)("p",null,"Get vkey from a remote URL."),(0,a.kt)("h4",{id:"parameters-3"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"circuitName")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Name of the circuit, which can be chosen from ",(0,a.kt)("inlineCode",{parentName:"td"},"Circuit"))))),(0,a.kt)("h4",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"any"),">"),(0,a.kt)("p",null,"vkey of the circuit"),(0,a.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/provers/web.ts#L134"},"circuits/provers/web.ts:134")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"verifyproof"},"verifyProof"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"verifyProof"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"circuitName"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"publicSignals"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"proof"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,a.kt)("p",null,"The function returns true if the proof of the circuit is valid, false otherwise."),(0,a.kt)("h4",{id:"parameters-4"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"circuitName")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Name of the circuit, which can be chosen from ",(0,a.kt)("inlineCode",{parentName:"td"},"Circuit"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"publicSignals")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"PublicSignals")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The snark public signals that are generated from ",(0,a.kt)("inlineCode",{parentName:"td"},"genProofAndPublicSignals"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"proof")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"Groth16Proof")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The snark proof that is generated from ",(0,a.kt)("inlineCode",{parentName:"td"},"genProofAndPublicSignals"))))),(0,a.kt)("h4",{id:"returns-3"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,a.kt)("p",null,"True if the proof is valid, false otherwise"),(0,a.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/provers/web.ts#L89"},"circuits/provers/web.ts:89")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"warmkeys"},"warmKeys"),(0,a.kt)("p",null,"\u25b8 ",(0,a.kt)("strong",{parentName:"p"},"warmKeys"),"(",(0,a.kt)("inlineCode",{parentName:"p"},"circuitName"),"): ",(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,a.kt)("p",null,"Load proving keys for a circuit into memory. Future proofs using these keys will not need to wait for download."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Use this function without ",(0,a.kt)("inlineCode",{parentName:"p"},"await")," to start the download in the background.")),(0,a.kt)("h4",{id:"parameters-5"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"circuitName")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Name of the circuit, which can be chosen from ",(0,a.kt)("inlineCode",{parentName:"td"},"Circuit"))))),(0,a.kt)("h4",{id:"returns-4"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,a.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"await webProver.warmKeys(circuitName: string)\n")),(0,a.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/60105749/packages/circuits/provers/web.ts#L76"},"circuits/provers/web.ts:76")))}k.isMDXComponent=!0}}]);