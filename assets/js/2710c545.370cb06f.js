"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[3899],{30876:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(n),d=o,m=u["".concat(c,".").concat(d)]||u[d]||y[d]||a;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[u]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},28822:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>y,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var r=n(7896),o=(n(2784),n(30876));const a={description:"Definition of epoch key in UniRep"},i="Epoch Key",p={unversionedId:"protocol/epoch-key",id:"version-2.0.0-beta-4/protocol/epoch-key",title:"Epoch Key",description:"Definition of epoch key in UniRep",source:"@site/versioned_docs/version-2.0.0-beta-4/protocol/epoch-key.md",sourceDirName:"protocol",slug:"/protocol/epoch-key",permalink:"/docs/2.0.0-beta-4/protocol/epoch-key",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-2.0.0-beta-4/protocol/epoch-key.md",tags:[],version:"2.0.0-beta-4",frontMatter:{description:"Definition of epoch key in UniRep"},sidebar:"apiSidebar",previous:{title:"User State Transition",permalink:"/docs/2.0.0-beta-4/protocol/user-state-transition"},next:{title:"Data",permalink:"/docs/2.0.0-beta-4/protocol/data"}},c={},l=[],s={toc:l},u="wrapper";function y(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"epoch-key"},"Epoch Key"),(0,o.kt)("p",null,"Epoch keys are public, temporary, identifiers for users."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Unique epoch keys are generated for each user in each epoch."),(0,o.kt)("li",{parentName:"ul"},"They are the users' temporary personas, allowing anonymous interaction with others."),(0,o.kt)("li",{parentName:"ul"},"Epoch keys receive attestations to change user data."),(0,o.kt)("li",{parentName:"ul"},"An epoch key is computed by:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const field = attesterId + (epoch << 160) + (nonce << 208)\nposeidon2([identitySecret, field])\n")),(0,o.kt)("p",null,"where ",(0,o.kt)("inlineCode",{parentName:"p"},"nonce")," can be any value between ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"numEpochKeyNoncePerEpoch - 1"),", so that a user can have ",(0,o.kt)("inlineCode",{parentName:"p"},"numEpochKeyNoncePerEpoch")," epoch keys per epoch."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Only a user knows their ",(0,o.kt)("inlineCode",{parentName:"li"},"identitySecret"),", so only they know if they have received an attestation; others see an attestation given to a random value."),(0,o.kt)("li",{parentName:"ul"},"In the ",(0,o.kt)("a",{parentName:"li",href:"../circuits-api/circuits#epoch-key-proof"},"epoch key proof")," circuit, a user can prove that they own an ",(0,o.kt)("inlineCode",{parentName:"li"},"epochKey"),", and so are able to receive and process attestations given to that ",(0,o.kt)("inlineCode",{parentName:"li"},"epochKey"),".")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"See also"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/2.0.0-beta-4/protocol/epoch"},"Epoch")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/2.0.0-beta-4/protocol/user-state-transition"},"User State Transition")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/2.0.0-beta-4/circuits-api/circuits#epoch-key-proof"},"Epoch Key Proof")))))}y.isMDXComponent=!0}}]);