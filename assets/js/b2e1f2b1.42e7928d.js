"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[5208],{30876:(e,t,r)=>{r.d(t,{Zo:()=>f,kt:()=>m});var n=r(2784);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},f=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,f=s(e,["components","mdxType","originalType","parentName"]),u=c(r),d=o,m=u["".concat(p,".").concat(d)]||u[d]||l[d]||i;return r?n.createElement(m,a(a({ref:t},f),{},{components:r})):n.createElement(m,a({ref:t},f))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},55028:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(7896),o=(r(2784),r(30876));const i={},a="12. Attesters/ Users verify the reputation proof",s={unversionedId:"getting-started/start-with-cli-commands/attesters-users-verify-the-reputation-proof",id:"version-1.0.1/getting-started/start-with-cli-commands/attesters-users-verify-the-reputation-proof",title:"12. Attesters/ Users verify the reputation proof",description:"See: cli/verifyReputationProof for more verifyReputationProof options",source:"@site/versioned_docs/version-1.0.1/getting-started/start-with-cli-commands/12.-attesters-users-verify-the-reputation-proof.md",sourceDirName:"getting-started/start-with-cli-commands",slug:"/getting-started/start-with-cli-commands/attesters-users-verify-the-reputation-proof",permalink:"/docs/1.0.1/getting-started/start-with-cli-commands/attesters-users-verify-the-reputation-proof",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-1.0.1/getting-started/start-with-cli-commands/12.-attesters-users-verify-the-reputation-proof.md",tags:[],version:"1.0.1",sidebarPosition:12,frontMatter:{},sidebar:"apiSidebar",previous:{title:"11. User generates reputation proof",permalink:"/docs/1.0.1/getting-started/start-with-cli-commands/user-generates-reputation-proof"},next:{title:"13. User generates sign up proof",permalink:"/docs/1.0.1/getting-started/start-with-cli-commands/user-generates-sign-up-proof"}},p={},c=[],f={toc:c},u="wrapper";function l(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"12-attesters-users-verify-the-reputation-proof"},"12. Attesters/ Users verify the reputation proof"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx ts-node cli/index.ts verifyReputationProof \\\n    -x $UNIREP_CONTRACT_ADDRESS  \\\n    -pf $REPUTATION_PROOF  \\\n    -p $REPUTATION_PUBLIC_SIGNALS\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"See: ",(0,o.kt)("a",{parentName:"p",href:"/docs/1.0.1/cli/reputation-proof#verifyreputationproof"},"cli/verifyReputationProof")," for more ",(0,o.kt)("inlineCode",{parentName:"p"},"verifyReputationProof")," options")),(0,o.kt)("p",null,"If the proof is verified valid, the message will be printed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Epoch key of the user: 3914435768\nVerify reputation proof from attester 1 with min rep 1, reputation nullifiers amount 0 and graffiti pre-image 0, succeed\n")))}l.isMDXComponent=!0}}]);