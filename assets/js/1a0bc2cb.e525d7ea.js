"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[3903],{30876:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(2784);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(r),f=a,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||i;return r?n.createElement(d,c(c({ref:t},s),{},{components:r})):n.createElement(d,c({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,c=new Array(i);c[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[m]="string"==typeof e?e:a,c[1]=o;for(var p=2;p<i;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},19807:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(7896),a=(r(2784),r(30876));const i={id:"typechain.zkKit.incrementalMerkleTreeSol",title:"Namespace: incrementalMerkleTreeSol",sidebar_label:"incrementalMerkleTreeSol",custom_edit_url:null},c=void 0,o={unversionedId:"contracts-api/namespaces/typechain.zkKit.incrementalMerkleTreeSol",id:"version-2.1.x/contracts-api/namespaces/typechain.zkKit.incrementalMerkleTreeSol",title:"Namespace: incrementalMerkleTreeSol",description:"typechain.zkKit.incrementalMerkleTreeSol",source:"@site/versioned_docs/version-2.1.x/contracts-api/namespaces/typechain.zkKit.incrementalMerkleTreeSol.md",sourceDirName:"contracts-api/namespaces",slug:"/contracts-api/namespaces/typechain.zkKit.incrementalMerkleTreeSol",permalink:"/docs/contracts-api/namespaces/typechain.zkKit.incrementalMerkleTreeSol",draft:!1,editUrl:null,tags:[],version:"2.1.x",frontMatter:{id:"typechain.zkKit.incrementalMerkleTreeSol",title:"Namespace: incrementalMerkleTreeSol",sidebar_label:"incrementalMerkleTreeSol",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"poseidonSolidity",permalink:"/docs/contracts-api/namespaces/typechain.poseidonSolidity"},next:{title:"zkKit",permalink:"/docs/contracts-api/namespaces/typechain.zkKit"}},l={},p=[{value:"Interfaces",id:"interfaces",level:2}],s={toc:p},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/contracts-api/modules/typechain"},"typechain"),".",(0,a.kt)("a",{parentName:"p",href:"/docs/contracts-api/namespaces/typechain.zkKit"},"zkKit"),".incrementalMerkleTreeSol"),(0,a.kt)("h2",{id:"interfaces"},"Interfaces"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/contracts-api/interfaces/typechain.zkKit.incrementalMerkleTreeSol.IncrementalBinaryTree"},"IncrementalBinaryTree"))))}u.isMDXComponent=!0}}]);