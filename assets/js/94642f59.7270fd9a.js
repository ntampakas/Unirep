"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[3160],{30876:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(2784);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||s;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},61616:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=r(7896),a=(r(2784),r(30876));const s={},o="Users and Attesters",i={unversionedId:"protocol/users-and-attesters",id:"version-2.1.x/protocol/users-and-attesters",title:"Users and Attesters",description:"Actors in Unirep",source:"@site/versioned_docs/version-2.1.x/protocol/users-and-attesters.md",sourceDirName:"protocol",slug:"/protocol/users-and-attesters",permalink:"/docs/protocol/users-and-attesters",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-2.1.x/protocol/users-and-attesters.md",tags:[],version:"2.1.x",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Testnet Addresses",permalink:"/docs/testnet-deployment"},next:{title:"Epoch",permalink:"/docs/protocol/epoch"}},l={},p=[{value:"Actors in Unirep",id:"actors-in-unirep",level:2},{value:"Attesters \ud83e\udd16",id:"attesters-",level:3},{value:"Users \ud83d\udc64",id:"users-",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"users-and-attesters"},"Users and Attesters"),(0,a.kt)("h2",{id:"actors-in-unirep"},"Actors in Unirep"),(0,a.kt)("h3",{id:"attesters-"},"Attesters \ud83e\udd16"),(0,a.kt)("p",null,"Attesters can be thought of as applications or contracts. Attesters define their own data schemas and are able to ",(0,a.kt)("strong",{parentName:"p"},"give attestations")," to users, which are combined to become the users' data."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Attesters sign up by calling ",(0,a.kt)("inlineCode",{parentName:"li"},"attesterSignUp")," on the Unirep contract."),(0,a.kt)("li",{parentName:"ul"},"Attesters are given an ",(0,a.kt)("inlineCode",{parentName:"li"},"attesterId")," that is their contract address."),(0,a.kt)("li",{parentName:"ul"},"Attester information and attestation history are ",(0,a.kt)("em",{parentName:"li"},"public"),"; everyone can see each attestation and which attester submitted it to the Unirep contract.")),(0,a.kt)("h3",{id:"users-"},"Users \ud83d\udc64"),(0,a.kt)("p",null,"Users ",(0,a.kt)("strong",{parentName:"p"},"receive data")," from attesters and are able to ",(0,a.kt)("strong",{parentName:"p"},"prove received data"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Attesters sign up users by calling ",(0,a.kt)("inlineCode",{parentName:"li"},"userSignUp")," on the Unirep contract with a signup proof."),(0,a.kt)("li",{parentName:"ul"},"A user's ",(0,a.kt)("inlineCode",{parentName:"li"},"identityCommitment")," is revealed at this time and recorded in the contract to prevent double signup."),(0,a.kt)("li",{parentName:"ul"},"A user can later prove their identity to the protocol by re-creating the ",(0,a.kt)("inlineCode",{parentName:"li"},"identity commitment")," with the secret values known only to the user.")),(0,a.kt)("p",null,"Attesters may also use ",(0,a.kt)("inlineCode",{parentName:"p"},"manualUserSignUp")," and provide the identity and state tree values directly. This is designed to be used by an attester implementing their own signup proof logic. Note that this method ",(0,a.kt)("em",{parentName:"p"},"must")," be guarded by appropriate zk checks."))}d.isMDXComponent=!0}}]);