"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[9769],{30876:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(2784);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,f=u["".concat(c,".").concat(d)]||u[d]||g[d]||o;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4138:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(7896),a=(r(2784),r(30876));const o={title:"UniRep contract helpers"},i=void 0,s={unversionedId:"contracts-api/helpers",id:"version-2.0.0-beta-4/contracts-api/helpers",title:"UniRep contract helpers",description:"getUnirepContract",source:"@site/versioned_docs/version-2.0.0-beta-4/contracts-api/helpers.md",sourceDirName:"contracts-api",slug:"/contracts-api/helpers",permalink:"/docs/2.0.0-beta-4/contracts-api/helpers",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-2.0.0-beta-4/contracts-api/helpers.md",tags:[],version:"2.0.0-beta-4",frontMatter:{title:"UniRep contract helpers"},sidebar:"apiSidebar",previous:{title:"ABIs",permalink:"/docs/2.0.0-beta-4/contracts-api/abis"},next:{title:"Error codes",permalink:"/docs/2.0.0-beta-4/contracts-api/errors"}},c={},p=[{value:"getUnirepContract",id:"getunirepcontract",level:2},{value:"genSignature",id:"gensignature",level:2}],l={toc:p},u="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"getunirepcontract"},"getUnirepContract"),(0,a.kt)("p",null,"Connect to a Unirep contract with a given Unirep address."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const getUnirepContract = (\n    address: string,\n    signerOrProvider: ethers.Signer | ethers.providers.Provider\n): Unirep\n")),(0,a.kt)("p",null,"For example,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { getUnirepContract } from '@unirep/contracts'\n\nconst unirep = getUnirepContract(\n    address,          // the address of UniRep contract\n    signerOrProvider, // the signer of the provider\n)\n")),(0,a.kt)("h2",{id:"gensignature"},"genSignature"),(0,a.kt)("p",null,"Generate signature for attester if the attester signs up through ",(0,a.kt)("a",{parentName:"p",href:"/docs/2.0.0-beta-4/contracts-api/unirep-sol#attestersignupviarelayer"},(0,a.kt)("inlineCode",{parentName:"a"},"attesterSignUpViaRelayer")),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const genSignature = async (\n    unirepAddress: string,\n    attester: ethers.Signer | ethers.Wallet,\n    epochLength: number\n)\n")),(0,a.kt)("p",null,"For example,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { genSignature } from '@unirep/contracts'\n\n// generate the signature\nconst signature = genSignature(\n    address,     // the address of UniRep contract\n    signer,      // the signer of the attester\n    epochLength, // the epoch length of the attester\n)\n\n// sign up with UniRep contract\nconst tx = await unirep.attesterSignUpViaRelayer(\n    signer.address,\n    epochLength,\n    signature\n)\n")))}g.isMDXComponent=!0}}]);