"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[2024],{30876:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(n),f=o,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:o,a[1]=p;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},32448:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var r=n(7896),o=(n(2784),n(30876));const i={description:"Attester gives reputation to an epoch key"},a="Attestation",p={unversionedId:"cli/attestation",id:"version-1.0.1/cli/attestation",title:"Attestation",description:"Attester gives reputation to an epoch key",source:"@site/versioned_docs/version-1.0.1/cli/attestation.md",sourceDirName:"cli",slug:"/cli/attestation",permalink:"/docs/1.0.1/cli/attestation",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-1.0.1/cli/attestation.md",tags:[],version:"1.0.1",frontMatter:{description:"Attester gives reputation to an epoch key"},sidebar:"apiSidebar",previous:{title:"Epoch Key And Proof",permalink:"/docs/1.0.1/cli/epoch-key-and-proof"},next:{title:"Epoch transition",permalink:"/docs/1.0.1/cli/epoch-transition"}},s={},c=[{value:"<code>attest</code>",id:"attest",level:2},{value:"Options",id:"options",level:3},{value:'Options inherited from parent commands <a href="#options-inherited-from-parent-commands" id="options-inherited-from-parent-commands"></a>',id:"options-inherited-from-parent-commands-",level:4}],l={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"attestation"},"Attestation"),(0,o.kt)("h2",{id:"attest"},(0,o.kt)("inlineCode",{parentName:"h2"},"attest")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npx ts-node cli/index.ts attest\n                  [-h] \n                  [-e ETH_PROVIDER]\n                  -epk EPOCH_KEY \n                  [-pr POS_REP] \n                  [-nr NEG_REP] \n                  [-gf GRAFFITI]\n                  [-s SIGN_UP] \n                  -x CONTRACT \n                  -d ETH_PRIVKEY\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -e ETH_PROVIDER, --eth-provider ETH_PROVIDER\n                        A connection string to an Ethereum provider. Default: http://localhost:8545\n  -epk EPOCH_KEY, --epoch-key EPOCH_KEY\n                        The user's epoch key to attest to (in hex representation)\n  -pr POS_REP, --pos-rep POS_REP\n                        Score of positive reputation to give to the user\n  -nr NEG_REP, --neg-rep NEG_REP\n                        Score of negative reputation to give to the user\n  -gf GRAFFITI, --graffiti GRAFFITI\n                        Graffiti for the reputation given to the user (in hex representation)\n  -s SIGN_UP, --sign-up SIGN_UP\n                        Whether to set sign up flag to the user\n  -x CONTRACT, --contract CONTRACT\n                        The Unirep contract address\n  -d ETH_PRIVKEY, --eth-privkey ETH_PRIVKEY\n                        The attester's Ethereum private key\n")),(0,o.kt)("h4",{id:"options-inherited-from-parent-commands-"},"Options inherited from parent commands ",(0,o.kt)("a",{href:"#options-inherited-from-parent-commands",id:"options-inherited-from-parent-commands"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"  -h, --help            Show this help message and exit.\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"source: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/5ef3fa8ed70761e0d128fe054bcdb6c72be2f7a1/packages/core/cli/attest.ts"},"core/cli/attest.ts"))))}u.isMDXComponent=!0}}]);