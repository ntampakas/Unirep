"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[5870],{30876:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(2784);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),d=a,h=u["".concat(c,".").concat(d)]||u[d]||f[d]||i;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},82009:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(2784),a=r(6277);const i={tabItem:"tabItem_OMyP"};function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(i.tabItem,o),hidden:r},t)}},77336:(e,t,r)=>{r.d(t,{Z:()=>E});var n=r(7896),a=r(2784),i=r(6277),o=r(24126),l=r(7267),c=r(32424),s=r(42244),p=r(24155);function u(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}}))}function f(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??u(r);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function d(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:r}=e;const n=(0,l.k6)(),i=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,c._X)(i),(0,a.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})}),[i,n])]}function m(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,i=f(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[c,s]=h({queryString:r,groupId:n}),[u,m]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,i]=(0,p.Nk)(r);return[n,(0,a.useCallback)((e=>{r&&i.set(e)}),[r,i])]}({groupId:n}),y=(()=>{const e=c??u;return d({value:e,tabValues:i})?e:null})();(0,a.useLayoutEffect)((()=>{y&&l(y)}),[y]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),s(e),m(e)}),[s,m,i]),tabValues:i}}var y=r(89741);const v={tabList:"tabList_M0Dn",tabItem:"tabItem_ysIP"};function b(e){let{className:t,block:r,selectedValue:l,selectValue:c,tabValues:s}=e;const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),f=e=>{const t=e.currentTarget,r=p.indexOf(t),n=s[r].value;n!==l&&(u(t),c(n))},d=e=>{let t=null;switch(e.key){case"Enter":f(e);break;case"ArrowRight":{const r=p.indexOf(e.currentTarget)+1;t=p[r]??p[0];break}case"ArrowLeft":{const r=p.indexOf(e.currentTarget)-1;t=p[r]??p[p.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},t)},s.map((e=>{let{value:t,label:r,attributes:o}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>p.push(e),onKeyDown:d,onClick:f},o,{className:(0,i.Z)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":l===t})}),r??t)})))}function k(e){let{lazy:t,children:r,selectedValue:n}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function g(e){const t=m(e);return a.createElement("div",{className:(0,i.Z)("tabs-container",v.tabList)},a.createElement(b,(0,n.Z)({},e,t)),a.createElement(k,(0,n.Z)({},e,t)))}function E(e){const t=(0,y.Z)();return a.createElement(g,(0,n.Z)({key:String(t)},e))}},35220:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var n=r(7896),a=(r(2784),r(30876)),i=r(77336),o=r(82009);const l={title:"EpochKeyLiteVerifierHelper.sol"},c=void 0,s={unversionedId:"contracts-api/verifiers/epoch-key-lite-verifier-helper",id:"version-2.0.0-beta-4/contracts-api/verifiers/epoch-key-lite-verifier-helper",title:"EpochKeyLiteVerifierHelper.sol",description:"A contract address for an epoch key lite verifier helper. See IVerifier for more info.",source:"@site/versioned_docs/version-2.0.0-beta-4/contracts-api/verifiers/epoch-key-lite-verifier-helper.md",sourceDirName:"contracts-api/verifiers",slug:"/contracts-api/verifiers/epoch-key-lite-verifier-helper",permalink:"/docs/2.0.0-beta-4/contracts-api/verifiers/epoch-key-lite-verifier-helper",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-2.0.0-beta-4/contracts-api/verifiers/epoch-key-lite-verifier-helper.md",tags:[],version:"2.0.0-beta-4",frontMatter:{title:"EpochKeyLiteVerifierHelper.sol"},sidebar:"apiSidebar",previous:{title:"EpochKeyVerifierHelper.sol",permalink:"/docs/2.0.0-beta-4/contracts-api/verifiers/epoch-key-verifier-helper"},next:{title:"ReputationVerifierHelper.sol",permalink:"/docs/2.0.0-beta-4/contracts-api/verifiers/reputation-verifier-helper"}},p={},u=[{value:"decodeEpochKeyLiteSignals",id:"decodeepochkeylitesignals",level:2},{value:"verifyAndCheck",id:"verifyandcheck",level:2},{value:"verifyAndCheckCaller",id:"verifyandcheckcaller",level:2}],f={toc:u},d="wrapper";function h(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"A contract address for an epoch key lite verifier helper. See ",(0,a.kt)("a",{parentName:"p",href:"iverifier-sol"},"IVerifier")," for more info."),(0,a.kt)(i.Z,{defaultValue:"typescript",values:[{label:"Typescript/Javascript",value:"typescript"},{label:"Solidity",value:"solidity"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"typescript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="epochKeyLiteVerifierHelper.ts"',title:'"epochKeyLiteVerifierHelper.ts"'},"import { deployVerifierHelper } from '@unirep/contracts/deploy'\nimport { defaultProver } from '@unirep/circuits/provers/defaultProver'\nimport { Circuit, EpochKeyLiteProof } from '@unirep/circuits'\n\n// deploys epoch key lite verifier helper contract\nconst epochKeyLiteVerifierHelper = await deployVerifierHelper(accounts[0], Circuit.epochKeyLite)\n\nconst r = await defaultProver.genProofAndPublicSignals(\n  Circuit.epochKeyLite,\n  CircuitInputs // see @unirep/circuits to know the whole circuit inputs\n)\n\nconst { publicSignals, proof } = new EpochKeyLiteProof(\n  r.publicSignals,\n  r.proof\n)\n\n// fails or returns proof signals\nconst signals = await epochKeyLiteVerifierHelper.verifyAndCheck(\n  publicSignals,\n  proof\n) \n"))),(0,a.kt)(o.Z,{value:"solidity",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol",metastring:'title="App.sol"',title:'"App.sol"'},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { EpochKeyLiteVerifierHelper } from '@unirep/contracts/verifierHelpers/EpochKeyLiteVerifierHelper.sol';\n\ncontract App {\n  // use the deployed helper\n  EpochKeyLiteVerifierHelper public helper;\n  constructor(\n    EpochKeyLiteVerifierHelper _helper\n  ) {\n    helper = _helper;\n  }\n\n  // decode and verify the proofs\n  // fails or returns proof signals\n  function decodeAndVerify(\n    uint256[] calldata publicSignals,\n    uint256[8] calldata proof\n  ) public view returns (EpochKeyLiteVerifierHelper.EpochKeySignals memory) {\n    return helper.verifyAndCheck(publicSignals, proof);\n  }\n}\n\n")))),(0,a.kt)("h2",{id:"decodeepochkeylitesignals"},"decodeEpochKeyLiteSignals"),(0,a.kt)("p",null,"Decode the public signals from an ",(0,a.kt)("a",{parentName:"p",href:"../../circuits-api/circuits#epoch-key-lite-proof"},"epoch key lite proof")," info named variables."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"function decodeEpochKeyLiteSignals(uint256[] memory publicSignals)\n    public\n    pure\n    returns (EpochKeySignals memory)\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"stateTreeRoot")," variable in this struct is unused for epoch key lite proofs.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"struct EpochKeySignals {\n    bool revealNonce;\n    uint8 nonce;\n    uint48 epoch;\n    uint160 attesterId;\n    uint256 stateTreeRoot;\n    uint256 epochKey;\n    uint256 data;\n}\n")),(0,a.kt)("h2",{id:"verifyandcheck"},"verifyAndCheck"),(0,a.kt)("p",null,"Verify an ",(0,a.kt)("a",{parentName:"p",href:"../../circuits-api/circuits#epoch-key-lite-proof"},"epoch key lite proof")," and validate the public signals against the onchain state. This function will revert if any inputs are invalid."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This function ",(0,a.kt)("strong",{parentName:"p"},"does not")," require the epoch for the proof to be the current epoch. The user may generate a valid proof for a past epoch. If you require the proof to be for the current epoch you should add an additional check using ",(0,a.kt)("a",{parentName:"p",href:"#attestercurrentepoch"},(0,a.kt)("inlineCode",{parentName:"a"},"attesterCurrentEpoch")),".")),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"This function does not verify that the ",(0,a.kt)("inlineCode",{parentName:"p"},"attesterId")," is the same as the caller. Thus, we recommend that to either use ",(0,a.kt)("a",{parentName:"p",href:"#verifyandcheckcaller"},"verifyAndCheckCaller")," or to manually verify the ",(0,a.kt)("inlineCode",{parentName:"p"},"attesterId"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"function verifyAndCheck(\n    uint256[] calldata publicSignals,\n    uint256[8] calldata proof\n) public\n  view\n  returns (EpochKeySignals memory) \n")),(0,a.kt)("h2",{id:"verifyandcheckcaller"},"verifyAndCheckCaller"),(0,a.kt)("p",null,"Verify an ",(0,a.kt)("a",{parentName:"p",href:"../../circuits-api/circuits#epoch-key-lite-proof"},"epoch key lite proof")," and validate the public signals against the onchain state. This function will revert if any inputs are invalid. This is identical to ",(0,a.kt)("inlineCode",{parentName:"p"},"verifyAndCheck")," but also checks that the caller is the attester."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This function ",(0,a.kt)("strong",{parentName:"p"},"does not")," require the epoch for the proof to be the current epoch. The user may generate a valid proof for a past epoch. If you require the proof to be for the current epoch you should add an additional check using ",(0,a.kt)("a",{parentName:"p",href:"#attestercurrentepoch"},(0,a.kt)("inlineCode",{parentName:"a"},"attesterCurrentEpoch")),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"function verifyAndCheckCaller(\n    uint256[] calldata publicSignals,\n    uint256[8] calldata proof\n) public\n  view\n  returns (EpochKeySignals memory)\n")))}h.isMDXComponent=!0}}]);