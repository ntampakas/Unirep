"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[3294],{30876:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(2784);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(r),b=a,d=u["".concat(p,".").concat(b)]||u[b]||f[b]||i;return r?n.createElement(d,o(o({ref:t},c),{},{components:r})):n.createElement(d,o({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=b;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},53867:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(7896),a=(r(2784),r(30876));const i={title:"Snark types"},o=void 0,l={unversionedId:"utils-api/types",id:"version-2.0.0-beta-4/utils-api/types",title:"Snark types",description:"SnarkPublicSignals",source:"@site/versioned_docs/version-2.0.0-beta-4/utils-api/types.md",sourceDirName:"utils-api",slug:"/utils-api/types",permalink:"/docs/2.0.0-beta-4/utils-api/types",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-2.0.0-beta-4/utils-api/types.md",tags:[],version:"2.0.0-beta-4",frontMatter:{title:"Snark types"},sidebar:"apiSidebar",previous:{title:"Installation",permalink:"/docs/2.0.0-beta-4/utils-api/installation"},next:{title:"Incremental Merkle Tree",permalink:"/docs/2.0.0-beta-4/utils-api/incremental-tree"}},p={},s=[{value:"SnarkPublicSignals",id:"snarkpublicsignals",level:2},{value:"SnarkProof",id:"snarkproof",level:2}],c={toc:s},u="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"snarkpublicsignals"},"SnarkPublicSignals"),(0,a.kt)("p",null,"Type of snark public signals."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type SnarkPublicSignals = bigint[]\n")),(0,a.kt)("h2",{id:"snarkproof"},"SnarkProof"),(0,a.kt)("p",null,"Interface of snark proof."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface SnarkProof {\n    pi_a: bigint[]\n    pi_b: bigint[][]\n    pi_c: bigint[]\n}\n")))}f.isMDXComponent=!0}}]);