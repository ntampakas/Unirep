"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[2008],{30876:(e,t,r)=>{r.d(t,{Zo:()=>f,kt:()=>m});var o=r(2784);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),c=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},f=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},l="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,f=s(e,["components","mdxType","originalType","parentName"]),l=c(r),d=n,m=l["".concat(p,".").concat(d)]||l[d]||y[d]||i;return r?o.createElement(m,a(a({ref:t},f),{},{components:r})):o.createElement(m,a({ref:t},f))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[l]="string"==typeof e?e:n,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},14412:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>y,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=r(7896),n=(r(2784),r(30876));const i={},a="7. Attesters/Users verify epoch key proof",s={unversionedId:"getting-started/start-with-cli-commands/attesters-users-verify-epoch-key-proof",id:"version-1.0.1/getting-started/start-with-cli-commands/attesters-users-verify-epoch-key-proof",title:"7. Attesters/Users verify epoch key proof",description:"NOTE:&#x20;",source:"@site/versioned_docs/version-1.0.1/getting-started/start-with-cli-commands/7.-attesters-users-verify-epoch-key-proof.md",sourceDirName:"getting-started/start-with-cli-commands",slug:"/getting-started/start-with-cli-commands/attesters-users-verify-epoch-key-proof",permalink:"/docs/1.0.1/getting-started/start-with-cli-commands/attesters-users-verify-epoch-key-proof",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-1.0.1/getting-started/start-with-cli-commands/7.-attesters-users-verify-epoch-key-proof.md",tags:[],version:"1.0.1",sidebarPosition:7,frontMatter:{},sidebar:"apiSidebar",previous:{title:"6. User generates epoch key and epoch key proof",permalink:"/docs/1.0.1/getting-started/start-with-cli-commands/user-generates-epoch-key-and-epoch-key-proof"},next:{title:"8. Attester attest to epoch key",permalink:"/docs/1.0.1/getting-started/start-with-cli-commands/attester-attest-to-epoch-key"}},p={},c=[],f={toc:c},l="wrapper";function y(e){let{components:t,...r}=e;return(0,n.kt)(l,(0,o.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"7-attestersusers-verify-epoch-key-proof"},"7. Attesters/Users verify epoch key proof"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npx ts-node cli/index.ts verifyEpochKeyProof \\\n    -x $UNIREP_CONTRACT_ADDRESS  \\\n    -pf $EPOCH_KEY_PROOF  \\\n    -p $EPOCH_PUBLIC_SIGNALS\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"NOTE:")," "),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},"-p")," is the public signals of the epoch key proof"),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},"-pf")," is the epoch key proof"),(0,n.kt)("p",{parentName:"admonition"},"See: ",(0,n.kt)("a",{parentName:"p",href:"/docs/1.0.1/cli/epoch-key-and-proof#verifyepochkeyproof"},"cli/verifyEpochKeyProof")," for more ",(0,n.kt)("inlineCode",{parentName:"p"},"verifyEpochKeyProof")," options.")),(0,n.kt)("p",null,"If the epoch key proof is successfully verified, it prints"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"Verifying epoch key 1916576171 with GSTRoot 10687565875351486068559851063632616354892793772274816998588637683831425346879 in epoch 1\nVerify epoch key proof with epoch key 1916576171 succeed\n")))}y.isMDXComponent=!0}}]);