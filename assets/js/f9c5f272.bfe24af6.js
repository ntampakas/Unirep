"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[7998],{30876:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(2784);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(r),f=a,y=m["".concat(l,".").concat(f)]||m[f]||u[f]||c;return r?n.createElement(y,i(i({ref:t},p),{},{components:r})):n.createElement(y,i({ref:t},p))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=r.length,i=new Array(c);i[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[m]="string"==typeof e?e:a,i[1]=o;for(var s=2;s<c;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},94327:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>s});var n=r(7896),a=(r(2784),r(30876));const c={id:"typechain.factories.zkKit.incrementalMerkleTreeSol",title:"Namespace: incrementalMerkleTreeSol",sidebar_label:"incrementalMerkleTreeSol",custom_edit_url:null},i=void 0,o={unversionedId:"contracts-api/namespaces/typechain.factories.zkKit.incrementalMerkleTreeSol",id:"version-2.1.x/contracts-api/namespaces/typechain.factories.zkKit.incrementalMerkleTreeSol",title:"Namespace: incrementalMerkleTreeSol",description:"factories.zkKit.incrementalMerkleTreeSol",source:"@site/versioned_docs/version-2.1.x/contracts-api/namespaces/typechain.factories.zkKit.incrementalMerkleTreeSol.md",sourceDirName:"contracts-api/namespaces",slug:"/contracts-api/namespaces/typechain.factories.zkKit.incrementalMerkleTreeSol",permalink:"/docs/contracts-api/namespaces/typechain.factories.zkKit.incrementalMerkleTreeSol",draft:!1,editUrl:null,tags:[],version:"2.1.x",frontMatter:{id:"typechain.factories.zkKit.incrementalMerkleTreeSol",title:"Namespace: incrementalMerkleTreeSol",sidebar_label:"incrementalMerkleTreeSol",custom_edit_url:null},sidebar:"apiSidebar",previous:{title:"poseidonSolidity",permalink:"/docs/contracts-api/namespaces/typechain.factories.poseidonSolidity"},next:{title:"zkKit",permalink:"/docs/contracts-api/namespaces/typechain.factories.zkKit"}},l={},s=[{value:"Classes",id:"classes",level:2}],p={toc:s},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/contracts-api/namespaces/typechain.factories"},"factories"),".",(0,a.kt)("a",{parentName:"p",href:"/docs/contracts-api/namespaces/typechain.factories.zkKit"},"zkKit"),".incrementalMerkleTreeSol"),(0,a.kt)("h2",{id:"classes"},"Classes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/contracts-api/classes/typechain.factories.zkKit.incrementalMerkleTreeSol.IncrementalBinaryTree__factory"},"IncrementalBinaryTree","_","_","factory"))))}u.isMDXComponent=!0}}]);