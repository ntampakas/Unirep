"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[511],{30876:(t,e,n)=>{n.d(e,{Zo:()=>l,kt:()=>f});var r=n(2784);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),c=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},l=function(t){var e=c(t.components);return r.createElement(p.Provider,{value:e},t.children)},d="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),d=c(n),u=a,f=d["".concat(p,".").concat(u)]||d[u]||m[u]||o;return n?r.createElement(f,i(i({ref:e},l),{},{components:n})):r.createElement(f,i({ref:e},l))}));function f(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=t,s[d]="string"==typeof t?t:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},19620:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7896),a=(n(2784),n(30876));const o={},i="8. Attester attest to epoch key",s={unversionedId:"getting-started/start-with-cli-commands/attester-attest-to-epoch-key",id:"version-1.0.1/getting-started/start-with-cli-commands/attester-attest-to-epoch-key",title:"8. Attester attest to epoch key",description:"After attestation is submitted successfully, the message will be printed",source:"@site/versioned_docs/version-1.0.1/getting-started/start-with-cli-commands/8.-attester-attest-to-epoch-key.md",sourceDirName:"getting-started/start-with-cli-commands",slug:"/getting-started/start-with-cli-commands/attester-attest-to-epoch-key",permalink:"/docs/1.0.1/getting-started/start-with-cli-commands/attester-attest-to-epoch-key",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-1.0.1/getting-started/start-with-cli-commands/8.-attester-attest-to-epoch-key.md",tags:[],version:"1.0.1",sidebarPosition:8,frontMatter:{},sidebar:"apiSidebar",previous:{title:"7. Attesters/Users verify epoch key proof",permalink:"/docs/1.0.1/getting-started/start-with-cli-commands/attesters-users-verify-epoch-key-proof"},next:{title:"9. Epoch transition",permalink:"/docs/1.0.1/getting-started/start-with-cli-commands/epoch-transition"}},p={},c=[],l={toc:c},d="wrapper";function m(t){let{components:e,...n}=t;return(0,a.kt)(d,(0,r.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"8-attester-attest-to-epoch-key"},"8. Attester attest to epoch key"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx ts-node cli/index.ts attest \\\n    -x $UNIREP_CONTRACT_ADDRESS  \\\n    -d $ATTESTER_PRIVATE_KEY  \\\n    -epk $EPOCH_KEY  \\\n    -pr 5  \\\n    -nr 4  \\\n    -gf 19014214495641488759237505126948346942972912379615652741039992445865937985820  \\\n    -s 1\n")),(0,a.kt)("p",null,"After attestation is submitted successfully, the message will be printed"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Attesting to epoch key 1916576171 with pos rep 5, neg rep 4, graffiti 19014214495641488759237505126948346942972912379615652741039992445865937985820 and sign up flag 1\nTransaction hash: 0xd13371e0d2ff0f3897a88ce5a86861591451e63c6d9227739bc7d8b7608f8206\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},"NOTE:")," "),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"-epk")," is the epoch key of the receiver"),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"-pr")," (optional) is the positive reputation given to the user"),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"-nr")," (optional) is the negative reputation given to the user"),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"-gf")," (optional) is the graffiti for the reputation given to the user"),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"-s")," (optional) is the sign up flag to give to the user to indicate the attester authenticates the user's membership."),(0,a.kt)("p",{parentName:"admonition"},"See: ",(0,a.kt)("a",{parentName:"p",href:"/docs/1.0.1/cli/attestation"},"cli/attest")," for more ",(0,a.kt)("inlineCode",{parentName:"p"},"attest")," options")))}m.isMDXComponent=!0}}]);