"use strict";(self.webpackChunk_unirep_docs=self.webpackChunk_unirep_docs||[]).push([[2219],{30876:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(2784);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),l=c(n),u=i,h=l["".concat(s,".").concat(u)]||l[u]||m[u]||o;return n?r.createElement(h,a(a({ref:t},d),{},{components:n})):r.createElement(h,a({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[l]="string"==typeof e?e:i,a[1]=p;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},93205:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=n(7896),i=(n(2784),n(30876));const o={description:"Create a user identity with Semaphore"},a="User Identity",p={unversionedId:"cli/user-identity",id:"version-1.0.1/cli/user-identity",title:"User Identity",description:"Create a user identity with Semaphore",source:"@site/versioned_docs/version-1.0.1/cli/user-identity.md",sourceDirName:"cli",slug:"/cli/user-identity",permalink:"/docs/1.0.1/cli/user-identity",draft:!1,editUrl:"https://github.com/Unirep/Unirep/tree/main/packages/docs/versioned_docs/version-1.0.1/cli/user-identity.md",tags:[],version:"1.0.1",frontMatter:{description:"Create a user identity with Semaphore"},sidebar:"apiSidebar",previous:{title:"Deploy Unirep Contract",permalink:"/docs/1.0.1/cli/deploy-unirep-contract"},next:{title:"User Sign Up",permalink:"/docs/1.0.1/cli/user-sign-up"}},s={},c=[{value:"<code>genUnirepIdentity</code>",id:"genunirepidentity",level:2},{value:'Options inherited from parent commands <a href="#options-inherited-from-parent-commands" id="options-inherited-from-parent-commands"></a>',id:"options-inherited-from-parent-commands-",level:4}],d={toc:c},l="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(l,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"user-identity"},"User Identity"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Semaphore is a zero-knowledge gadget which allows users to prove their membership of a set without revealing their original identity."),(0,i.kt)("li",{parentName:"ul"},"We use ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/semaphore-protocol/semaphore"},"Semaphore")," here to generate users' identity and the identity commitment. Users can send their identity commitment instead of their Semaphore identity to sign up."),(0,i.kt)("li",{parentName:"ul"},"Only a user has the Semaphore identity and the identity commitment has signed up on the Unirep contract, the user can perform actions in the Unirep protocol.")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This function does not require users connect to an Ethereum provider.")),(0,i.kt)("h2",{id:"genunirepidentity"},(0,i.kt)("inlineCode",{parentName:"h2"},"genUnirepIdentity")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx ts-node cli/index.ts genUnirepIdentity [-h]\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"base64url encoded identity and identity commitment will be printed"),(0,i.kt)("li",{parentName:"ul"},"A string with ",(0,i.kt)("inlineCode",{parentName:"li"},"Unirep.identity")," prefix is user's Semaphore identity"),(0,i.kt)("li",{parentName:"ul"},"A string with ",(0,i.kt)("inlineCode",{parentName:"li"},"Unirep.identityCommitment")," prefix is user's Semaphore identity commitment")),(0,i.kt)("h4",{id:"options-inherited-from-parent-commands-"},"Options inherited from parent commands ",(0,i.kt)("a",{href:"#options-inherited-from-parent-commands",id:"options-inherited-from-parent-commands"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -h, --help            Show this help message and exit.\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"source: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unirep/Unirep/blob/5ef3fa8ed70761e0d128fe054bcdb6c72be2f7a1/packages/core/cli/genUnirepIdentity.ts"},"core/cli/genUnirepIdentity.ts"))))}m.isMDXComponent=!0}}]);